services:
  gateway:
    image: node:20-slim
    working_dir: /app
    volumes:
      - /srv/core/sparqplug/gateway:/app
    command: >
      sh -lc "set -e; npm init -y >/dev/null 2>&1 || true; npm pkg set type=commonjs >/dev/null 2>&1 || true;
      npm i --no-audit --no-fund express helmet express-session connect-redis redis http-proxy-middleware;
      node server.js"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://shared-redis:6379
      - SESSION_NAME=portal.sid
      - SESSION_DOMAIN=.getsparqd.com
      - PORTAL_HOST=portal.getsparqd.com
      - APP_BASE_PATH=/app
    env_file:
      - /srv/core/shared.env
    ports:
      - "127.0.0.1:8082:3000"
    depends_on:
      - app
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - session-net

  app:
    image: node:20-slim
    working_dir: /app
    volumes:
      - /srv/core/sparqplug/sparq-plug:/app
    environment:
      - NODE_ENV=production
      - PORT=4000
      - HOST=0.0.0.0
      - NEXT_PUBLIC_BASE_PATH=/app
      - NPM_CONFIG_PRODUCTION=false
      - NEXT_TELEMETRY_DISABLED=1
    expose:
      - "4000"
    command:
      - sh
      - -lc
      - |
        set -e
        if [ -f package.json ]; then
          npm ci --no-audit --no-fund || npm i --no-audit --no-fund
          # Ensure TypeScript is available for next.config.ts by installing it explicitly
          npm i --no-audit --no-fund typescript@5.9.2
          rm -rf .next
          npm run -s build
          if [ -f .next/standalone/server.js ]; then node .next/standalone/server.js; else npm run -s start; fi
        else
          echo 'No package.json found in /app; container idle'; sleep 3600
        fi
    networks:
      - session-net

networks:
  session-net:
    external: true